<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:ClickButtonHideWindow">
    <ControlTemplate x:Key="rect" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <SolidColorBrush x:Key="redBrush" Color="Red"/>
        </ControlTemplate.Resources>
        <StackPanel>
            <Rectangle Name="breakRectangle" Stroke="Red" StrokeThickness="2" Width="20" Height="20">
                <Rectangle.Fill>
                    <SolidColorBrush Color="White"/>
                </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter Margin="10"/>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="breakRectangle" Property="Fill" Value="{StaticResource ResourceKey=redBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <sys:String x:Key="name">哈哈大笑</sys:String>
    <Style x:Key="mystyle1" TargetType="Button">
        <Setter Property="FontSize" Value="22"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="IsPressed" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter  Property="Background" Value="Yellow"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="mystyle2" TargetType="Control" >
        <Setter Property="Background" Value="Lime"/>
        <Setter Property="FontSize" Value="22"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="BurlyWood"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="mystyle3" TargetType="Control"  BasedOn="{StaticResource ResourceKey=mystyle2}">
        <Setter Property="Background" Value="Pink"/>
        <Style.Triggers>
            <!-- 绑定当前的radio单选框,如果按钮选中,触发字体设置 -->
            <DataTrigger Binding="{Binding ElementName=radio, Path=IsChecked}" Value="True">
                <Setter Property="FontSize" Value="40"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Background" Value="Pink"/>
    </Style>
    <x:ArrayExtension x:Key="arr" Type="{x:Type sys:Int32}">
        <sys:Int32>1</sys:Int32>
        <sys:Int32>2</sys:Int32>
        <sys:Int32>3</sys:Int32>
        <sys:Int32>4</sys:Int32>
        <sys:Int32>5</sys:Int32>
        <sys:Int32>6</sys:Int32>
    </x:ArrayExtension>
    <local:ColorConvert x:Key="myConvert"/>
    <Style x:Key="item" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource myConvert}"/>
            </Setter.Value>
        </Setter>
    </Style>
    <ObjectDataProvider x:Key="Test" ObjectType="{x:Type local:Student}" MethodName="GetName"/>
    <local:Student x:Key="student">
        <local:Student.Name>哈哈哈哈</local:Student.Name>
    </local:Student>
    <DrawingBrush x:Key="test">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing>
                        <!-- 绘制矩形 -->
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry RadiusX="0.2" RadiusY="0.5"
                                                        Rect="0.02,0.02,0.96,0.96" />
                        </GeometryDrawing.Geometry>
                        <!-- 矩形填充色 -->
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="Green" Offset="0" />
                                <GradientStop Color="Red" Offset="1" />
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                        <!-- 矩形边框 -->
                        <GeometryDrawing.Pen>
                            <Pen Thickness="0.02">
                                <Pen.Brush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="AliceBlue" Offset="0" />
                                        <GradientStop Color="Black" Offset="1" />
                                    </LinearGradientBrush>
                                </Pen.Brush>
                            </Pen>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
</ResourceDictionary>